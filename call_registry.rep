#include "phone.hpp"

// Variables privades
struct node{
    phone cell;
    node* izq;
    node* der;
};

struct resp{
    node* it;
    node* it_anterior;
};

node* _raiz;
nat num_nodes;

// Funcions privades
node* copia_call(node * _raiz);

void thanos(node* n);

void agrega(node* n, phone telf);



resp buscar(nat num) const;
/* PRE: it = arrel del BST */
/* POST: Retorna un punter al node que cont√© un phone de numero = num.
	Si no existeix, retorna un punter al node previ i encontrado = false */

void num_entrades_aux(node* it,int &x);
node* elimina_aux(node* it, nat &num, bool &existeix);

void recnade(node* call,vector<phone> &v) const;

void margaux(vector<phone>  & vec,  int ini ,int auxi , int fini ) const;

void marga(vector<phone>  &vec,  int ini ,  int fini) const;